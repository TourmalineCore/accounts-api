name: Deploy to Prod and e2e test to prod

on:
  push:
    branches:
      - master

jobs:
  # this is needed to wait for the new docker image to be build and published to the registry
  # so that we can use the image to run ui of the needed commit related version as part of local-env
  # the idea is taken from here https://stackoverflow.com/a/71489231
  push_to_registry:
    uses: ./.github/workflows/docker-build-and-push.yml
    # without this it cannot login to the registry
    secrets: inherit

  deploy-to-prod:
    name: Deploy service to k8s for prod environment  
    needs: [push_to_registry]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Create default global .kube/config file
        run: |
          cd $HOME
          mkdir .kube
          echo "${{ secrets.DEV_KUBECONFIG }}" > .kube/config

      - name: Deploy
        uses: helmfile/helmfile-action@v1.9.0
        with:
          helmfile-version: 'v0.164.0'
          helm-version: 'v3.14.4'
          helmfile-args: >
            apply --namespace dev-inner-circle -f Api/ci/helmfile.yaml 
            --state-values-set image.tag=sha-${{ github.sha }} 
            --state-values-set ingress.hostname=${{ secrets.DEV_HOST }}
            --state-values-set extraSecretEnvVars.ConnectionStrings__DefaultConnection=${{ secrets.DEV_POSTGRESQL_CONNECTION_STRING }}
            --state-values-set extraSecretEnvVars.AuthenticationOptions__PublicSigningKey=${{ secrets.DEV_AUTH_PUBLIC_SIGNING_KEY }}
            --state-values-set extraSecretEnvVars.HttpUrls__AuthServiceUrl=${{ secrets.DEV_AUTH_SERVICE_URL }}
            --state-values-set extraSecretEnvVars.HttpUrls__EmployeesServiceUrl=${{ secrets.DEV_EMPLOYEE_SERVICE_URL }}
            --state-values-set extraSecretEnvVars.AccountValidationOptions__CorporateEmailDomain=${{ secrets.DEV_CORPORATE_EMAIL_DOMAIN }}
            --state-values-set extraSecretEnvVars.AccountValidationOptions__IgnoreCorporateDomainValidationRule=${{ secrets.DEV_IGNORE_CORPORATE_DOMAIN_VALIDATION_RULE }}
          helmfile-auto-init: "false"

  e2e-test-prod:
    runs-on: ubuntu-22.04
    needs: [deploy-to-prod]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
     
      # Get secrets to sign in
      - name: Set up Docker Compose environment variables
        run: |
          echo AUTH_LOGIN=${{ secrets.DEV_E2E_AUTO_TEST_LOGIN }} >> .env
          echo AUTH_PASSWORD=${{ secrets.DEV_E2E_AUTO_TEST_PASSWORD }} >> .env
      
      - name: Run service via docker-compose and run Karate-tests
        run: |
          # Get logs
          LOGS=$(docker compose --profile production-e2e-tests up --abort-on-container-exit)
          # Filter logs and mask sensitive information          
          FILTERED_LOGS=$(echo "$LOGS" | sed -E 's/"login":"[^"]*"/"login":"****"/g' \
                                    | sed -E 's/"password":"[^"]*"/"password":"****"/g' \
                                    | sed -E 's/"accessToken":[^,}]*"[^"]*"/"accessToken":"****"/g' \
                                    | sed -E 's/"Authorization":"[^"]*"/"Authorization":"****"/g' \
                                    | sed -E 's/"X-DEBUG-TOKEN":[^,}]*"[^"]*"/"X-DEBUG-TOKEN":"****"/g' \
                                    | sed -E 's/accessToken":\{[^}]*\}/accessToken":{"value":"****"}/g' \
                                    | sed -E 's/X-DEBUG-TOKEN: [^ ]*/X-DEBUG-TOKEN: ****/g' \
                                    | sed -E 's/Authorization: [^ ]*/Authorization: ****/g')
          echo "$FILTERED_LOGS"
          # Count failed and passed tests
          FAILED=$(echo "$FILTERED_LOGS" | grep -oP 'failed: *\K\d+')
          PASSED=$(echo "$FILTERED_LOGS" | grep -oP 'passed: *\K\d+')
          echo "Failed tests: $FAILED"
          echo "Passed tests: $PASSED"
          if [ "$FAILED" -gt 0 ]; then
            echo "Failed tests found! Failing the pipeline..."
            exit 1
          fi
          if [ "$PASSED" -eq 0 ]; then
            echo "No tests passed! Failing the pipeline..."
            exit 1
          fi
